#import <Foundation/Foundation.h>
@interface NSObject (Random)
+(float)ran: (int) n;
@end;

@implementation NSObject (Random)
+(float)ran: (int) n{
  static float a = 0.1;
  a = a + 0.1;
  float randomFloatAt0;
  srand48(time(0));
  randomFloatAt0 = drand48()+a;
  float randomFloat =(float)((int)(randomFloatAt0 *1111111.333) % n);
  //NSLog(@"%f",randomFloatAt0);
  randomFloat = (randomFloat - randomFloatAt0 >= 0.0) ? (randomFloat - randomFloatAt0) : (-1.0*(randomFloat - randomFloatAt0));
  return randomFloat ;
}   
@end;

int main (int argc, const char * argv[])
{
   NSAutoreleasePool * pool = [[NSAutoreleasePool alloc] init];
 
   NSUInteger num = (NSUInteger)[NSObject ran: 10000];
   NSLog(@"%i",num);
   int i;
   NSUInteger mask = 1 << 30;
   NSMutableString*bi = [[NSMutableString alloc]init];
   NSLog(@"%i",mask);
   for(i=31;i>0;i--){
       if(num&mask){
          [bi appendString:@"1"];
       }  
       else{
          [bi appendString:@"0"];
       }      
       mask = mask >> 1;
   }
   NSLog(@"number %i have binary: %@",num,bi);
    [pool drain];
   return 0;
}