#import <Foundation/Foundation.h>

//extern
NSString* const PatientDontChangeTempNotification = @"PatientDidChangeTempNotification";
//extern
NSString* const PatientTempUserInfoKey = @"PatientTempUserInfoKey";
static NSUInteger treatmentConcilium = 0;  
@interface NSObject (Random)
+(int)ran: (int) n;
@end;

@implementation NSObject (Random)
+(int)ran: (int) n{
  int a = ((int)[[NSDate date] timeIntervalSince1970]);
  static int a1 =3;
  a1 = a1+3;
  a = a/a1;
  //NSLog(@"a= %i",a);
  int ran = (a)%n >= 0 ? (a)%n : -(a)%n;
  return ran ;
}   
@end;

typedef enum{
    good = 0,
    bad = 1,
}EnumFeel;
typedef enum{
    Vaccination = 1 << 0,
    Operation = 1 << 1,
    Dropper = 1 << 2,
    Inhalation = 1 << 3,
    Warming = 1 << 4,
    Compress = 1 << 5,
    Banks = 1 << 6,
    Medicine = 1 << 7,
}DoctorsConsiliumChouseMask;

@class Patient;


@protocol AttetingDelegat <NSObject>

-(void)treatmentPatient:(Patient*)patient;
@end;

@interface Patient: NSObject
{
NSString* name;
CGFloat temp;
id <AttetingDelegat> atteting;
}
@property (retain, readwrite,nonatomic) NSString* name;
@property (readwrite,retain,nonatomic) id <AttetingDelegat> atteting; 
@property (readwrite,assign,nonatomic) CGFloat temp;
-(EnumFeel)IFeel;
-(void)takePill;
-(void)makeShot;
-(void)relax;
@end;

static int PatientNameNum;
static int DoctorNameNum;

@implementation Patient
@synthesize name,temp,atteting;
-(id)init{
    self=[super init];
    if(self){
        self.temp = ((CGFloat)[[self class] ran:4]) + 36.4 + ((CGFloat)[[self class] ran:10])/10;
        self.name = [NSString stringWithFormat:@"Patient ¹%i",PatientNameNum];
    }
    PatientNameNum++;
    return self;
}
-(void)setTemp:(CGFloat) inTemp{
    temp = inTemp;
}
-(EnumFeel)IFeel{
     NSLog(@"");
     EnumFeel ansver = ( ([[self class] ran:1000]%2 == 0) && self.temp <= 36.6) ? good : bad ;
     if(ansver) NSLog(@"I %@ -- feel: bad!!! | temp = %.1f",self.name,self.temp);
     else  NSLog(@"I %@ feel good temp = %.1f",self.name,self.temp);
     return ansver;
}
-(void)takePill{
    NSLog(@"");
    NSLog(@"My name is %@. I take pill.",name);
    self.temp = ((CGFloat)[[self class] ran:4]) + 36.0 + ((CGFloat)[[self class] ran:10])/10;
    NSLog(@"temp after pill: %.1f",self.temp);
}
-(void)makeShot{
    NSLog(@"");
    NSLog(@"My name is %@. I make shot.",name);
    self.temp = ((CGFloat)[[self class] ran:3]) + 35.0 + ((CGFloat)[[self class] ran:10])/10;
    NSLog(@"temp after shot: %.1f",self.temp);
}
-(void)relax{
    NSLog(@"");
    NSLog(@"My name is %@. I relaxing.",name);
}
@end;

@interface Doctor:NSObject <AttetingDelegat>
{NSString* name;}
@property (readwrite,retain,nonatomic) NSString*name;
-(void)treatmentPatient: (Patient*)patient;
-(void)conciliumAtTempPatient:(NSNotification*)notification;
-(void)conciliumTempNotification:(Patient*)patient;
@end;

@implementation Doctor
@synthesize name;
-(id)init{
    self=[super init];
    if(self){
        self.name = [NSString stringWithFormat:@"Doctor ¹%i",DoctorNameNum];
    }
    DoctorNameNum++;
    return self;
}
    -(void)treatmentPatient: (Patient*)patient{
        if([patient IFeel]){
            if(patient.temp < 36.6) {NSLog(@"Necessary relax!!!");[patient relax];}
            if(patient.temp > 36.6 && patient.temp < 38.f){
                NSLog(@"Necessary take pill!!!");
                [patient takePill];
                    if(patient.temp >= 37.f){ 
                        NSLog(@"Pill dont helping, necessary make shot\n");
                        [patient makeShot];
                        if(patient.temp>=37.0){
                            NSLog(@"Nothing helped!!!!!!");
                            NSLog(@"collect the Concilium");
                            [self conciliumTempNotification:patient];
                        }
                        else {NSLog(@"go to recovery!!!");NSLog(@"I %@ says: Perfectly!",self.name);}
                        
                    }    
                    else {
                        NSLog(@"%@ go to recovery ",patient.name);
                        NSLog(@"I %@ says: Perfectly!!!",self.name);
                    }    
            }
            if(patient.temp >= 38.f){
                NSLog(@"Necessary make shot");
                [patient makeShot];
                if(patient.temp>=37.0){
                    NSLog(@"the shot did not help");
                    NSLog(@"");
                    NSLog(@"collect the Concilium");
                    [self conciliumTempNotification:patient];
                }
                else {NSLog(@"go to recovery!!");NSLog(@"I %@ says : GOOD!!!",self.name);}
            }
        
        }
        else NSLog(@"Patient feel good!!! I %@ says: Perfectly!!!",self.name);
}
-(void)conciliumTempNotification:(Patient*)patient{
    treatmentConcilium = 0;
    NSDictionary*dictionary = [NSDictionary dictionaryWithObject:patient forKey:PatientTempUserInfoKey];
    [[NSNotificationCenter defaultCenter] postNotificationName:PatientDontChangeTempNotification
                                                  object:nil
                                                  userInfo:dictionary];
    NSLog(@"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");                                                  
    NSLog(@"                      intensive terapie:");
    NSLog(@"");
    if(treatmentConcilium & Vaccination) NSLog(@"                     Patient give vaccination ");
    if(treatmentConcilium & Operation)   NSLog(@"                     The Patient was made operation");
    if(treatmentConcilium & Dropper)     NSLog(@"                     Patient give dropper-kapelnica");
    if(treatmentConcilium & Inhalation)  NSLog(@"                     The Patient was made inhalation");
    if(treatmentConcilium & Warming)     NSLog(@"                     The Patient was made warming");
    if(treatmentConcilium & Compress)    NSLog(@"                     The Patient was made compress");
    if(treatmentConcilium & Banks)       NSLog(@"                     The Patient was made banks");
    if(treatmentConcilium & Medicine)    NSLog(@"                     Patient give medicine");
    patient.temp = ((CGFloat)[[self class] ran:3]) + 35.0 + ((CGFloat)[[self class] ran:10])/10;
    NSLog(@"");
    NSLog(@"temp %@ after intensive terapie : %.1f",patient.name,patient.temp);
    NSLog(@"");
            if(patient.temp>=37.0){
                            NSLog(@"Nothing helped!!!!!!");
                            NSLog(@"Again collect the Concilium");
                            [self conciliumTempNotification:patient];
            }
            else NSLog(@"finally %@ go to recovery!!!",patient.name);
}
-(void)conciliumAtTempPatient:(NSNotification*)notification{
    NSLog(@"");
    NSLog(@"I %@ here",self.name);
    NSLog(@"I checkout temp: %.1f Olala!!!",[[notification.userInfo objectForKey:PatientTempUserInfoKey] temp]);
    
    int i = [Doctor ran:7];
    int mask = 1 << i;
    switch(mask){
        case Vaccination: NSLog(@"I think that need vaccination ");treatmentConcilium = treatmentConcilium | mask;break;
        case Operation:   NSLog(@"I think that need operation");treatmentConcilium = treatmentConcilium | mask;break;
        case Dropper:     NSLog(@"I think that need dropper");treatmentConcilium = treatmentConcilium | mask;break;
        case Inhalation:  NSLog(@"I think that need inhalation");treatmentConcilium = treatmentConcilium | mask;break;
        case Warming:     NSLog(@"I think that need warming");treatmentConcilium = treatmentConcilium | mask;break;
        case Compress:    NSLog(@"I think that need compress");treatmentConcilium = treatmentConcilium | mask;break;
        case Banks:       NSLog(@"I think that need banks");treatmentConcilium = treatmentConcilium | mask;break;
        case Medicine:    NSLog(@"I think that need medicine");treatmentConcilium = treatmentConcilium | mask;break;
        default: NSLog(@"I dont know!");break;
    }

}    

@end;

int main (int argc, const char * argv[])
{
   NSAutoreleasePool * pool = [[NSAutoreleasePool alloc] init];
   
   int i;
   NSMutableArray*arrayDoctors = [[NSMutableArray alloc]init];
   NSMutableArray*arrayPatients = [[NSMutableArray alloc]init];
   for(i=0;i<10;i++){
       [arrayDoctors addObject:[[Doctor alloc]init]];
       [arrayPatients addObject:[[Patient alloc]init]];
       [[arrayPatients objectAtIndex:i] setAtteting:[arrayDoctors objectAtIndex:0]];
       [[NSNotificationCenter defaultCenter] addObserver:[arrayDoctors objectAtIndex:i]
                                            selector:@selector(conciliumAtTempPatient:) 
                                            name:PatientDontChangeTempNotification
                                            object:nil];
   }
   for(i=0;i<10;i++){
       NSLog(@"-------------------------------------------------------------------------------");
       [[arrayDoctors objectAtIndex:0] treatmentPatient:[arrayPatients objectAtIndex:i]];
       
   }


   NSLog (@"hello world");
   [pool drain];
   return 0;
}